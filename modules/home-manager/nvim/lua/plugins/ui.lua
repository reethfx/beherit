return {
    -- messages, cmdline and the popupmenu
    {
      "folke/noice.nvim",
      config = function()
        require("noice").setup({
          cmdline = {
            view = "cmdline",
          },
          presets = {
            bottom_search = true,
            command_palette = true,
            lsp_doc_border = true,
          },
          -- views = {
          --   cmdline_popup = {
          --     filter_options = {},
          --     win_options = {
          --       winhighlight = "NormalFloat:NormalFloat,FloatBorder:FloatBorder",
          --     },
          --   },
          -- },
        })
      end,
    },
    {
      "amrbashir/nvim-docs-view",
      lazy = true,
      cmd = "DocsViewToggle",
      opts = {
        position = "right",
        width = 60,
      },
    },
  
    -- Notifications
    {
      "rcarriga/nvim-notify",
      opts = {
        render = "compact",
        background_colour = "#1a1b26",
        timeout = 5000,
      },
    },
  
    -- statusline
    {
      "nvim-lualine/lualine.nvim",
      event = "VeryLazy",
      requires = { "nvim-tree/nvim-web-devicons", opt = true },
      opts = {
        options = {
          -- globalstatus = false,
          theme = "everforest",
          icons_enabled = true,
        },
        sections = {
          lualine_a = {
            {
              "mode",
              icon = "íåê",
            },
          },
        },
      },
    },
  
    -- filename
    {
      "b0o/incline.nvim",
      event = "BufReadPre",
      priority = 1200,
      config = function()
        require("incline").setup({
          window = { margin = { vertical = 0, horizontal = 1 } },
          hide = {
            cursorline = true,
          },
          render = function(props)
            local filename = vim.fn.fnamemodify(vim.api.nvim_buf_get_name(props.buf), ":t")
            if vim.bo[props.buf].modified then
              filename = "[+] " .. filename
            end
  
            local icon, color = require("nvim-web-devicons").get_icon_color(filename)
            return { { icon, guifg = color }, { " " }, { filename } }
          end,
        })
      end,
    },

    {
      "nvimdev/dashboard-nvim",
      event = "VimEnter",
      opts = function(_, opts)
        local logo = [[
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£æ‚†Å‚†Ä‚¢¶‚£æ‚£§‚†Ü‚†Ä‚†ª‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£º‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†à‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚¢Ä‚£∏‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ß‚°Ä‚†Ä‚†Ä
  ‚†Ä‚¢∞‚£æ‚£ø‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚†ñ‚†Ä
  ‚†Ä‚†Ä‚†à‚†ª‚£ø‚£¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚†ü‚†Å‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£∑‚£Ñ‚°Ä‚†Ä‚£ø‚°á‚†Ä‚£†‚£æ‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£¶‚£ø‚£ß‚£æ‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ô‚£ø‚£ø‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚†ü‚†Å‚£ª‚£ø‚†à‚†ô‚¢ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚£Ω‚£ø‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£¶‚£Ñ‚†Ä‚†Ä
  ‚†Ä‚£†‚£¥‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢º‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£∑‚£Ñ
  ‚†à‚†ô‚¢ø‚£ø‚£¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚†ü‚†Å
  ‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚†ü‚†Å‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ª‚£ø‚£∑‚°Ñ‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚£º‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£ø‚£¶‚£∏‚£ø‚£†‚£æ‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
  ]]
        logo = string.rep("\n", 8) .. logo .. "\n\n"
        opts.config.header = vim.split(logo, "\n")
      end,
    },
  }
  